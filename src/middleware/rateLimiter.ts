/**
 * –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Rate Limiting Middleware
 * –ó–∞—â–∏—Ç–∞ API –æ—Ç –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π –∏ DDoS –∞—Ç–∞–∫
 */

import { Request, Response } from 'express';
import rateLimit from 'express-rate-limit';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ Request —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ rate limit
interface RateLimitRequest extends Request {
    rateLimit?: {
        limit: number;
        current: number;
        remaining: number;
        resetTime: number;
    };
}

// –¢–∏–ø—ã –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ rate limit
interface RateLimitConfig {
    windowMs: number;
    max: number;
    message: {
        error: string;
        code: string;
        retryAfter?: string;
    };
    standardHeaders?: boolean;
    legacyHeaders?: boolean;
}

/**
 * –ë–∞–∑–æ–≤—ã–π –ª–∏–º–∏—Ç–µ—Ä –¥–ª—è –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
 * 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç –Ω–∞ IP
 */
export const generalLimiter = rateLimit({
    windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS || '900000'), // 15 –º–∏–Ω—É—Ç
    max: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS || '100'), // 100 –∑–∞–ø—Ä–æ—Å–æ–≤
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç.',
        code: 'RATE_LIMIT_EXCEEDED',
        retryAfter: '15 –º–∏–Ω—É—Ç'
    },
    standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers
    legacyHeaders: false, // Disable the `X-RateLimit-*` headers

    // –ö–∞—Å—Ç–æ–º–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    handler: (req: RateLimitRequest, res: Response) => {
        console.warn(`üö´ General rate limit exceeded for IP: ${req.ip}`);

        res.status(429).json({
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤',
            message: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            retryAfter: Math.ceil((req.rateLimit?.resetTime || Date.now()) / 1000)
        });
    },

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º localhost –≤ development
    skip: (req: Request) => {
        if (process.env.NODE_ENV === 'development' &&
            (req.ip === '127.0.0.1' || req.ip === '::1')) {
            return true;
        }
        return false;
    }
});

/**
 * –°—Ç—Ä–æ–≥–∏–π –ª–∏–º–∏—Ç–µ—Ä –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * 50 –ø–æ–ø—ã—Ç–æ–∫ –∑–∞ 5 –º–∏–Ω—É—Ç –Ω–∞ IP (–æ—Å–ª–∞–±–ª–µ–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
 */
export const authLimiter = rateLimit({
    windowMs: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç (–±—ã–ª–æ 15)
    max: 50, // 50 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ (–±—ã–ª–æ 5)
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞',
        code: 'AUTH_RATE_LIMIT_EXCEEDED',
        retryAfter: '5 –º–∏–Ω—É—Ç'
    },

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏
    handler: (req: Request, res: Response) => {
        console.error(`üîí Auth rate limit exceeded for IP: ${req.ip}`);

        res.status(429).json({
            error: '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞',
            message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.',
            retryAfter: 300 // 5 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–±—ã–ª–æ 900)
        });
    },

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º localhost –≤ development
    skip: (req: Request) => {
        if (process.env.NODE_ENV === 'development' &&
            (req.ip === '127.0.0.1' || req.ip === '::1')) {
            return true;
        }
        return false;
    }
});

/**
 * –õ–∏–º–∏—Ç–µ—Ä –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
 * 200 –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ 10 –º–∏–Ω—É—Ç –Ω–∞ IP
 */
export const gameLimiter = rateLimit({
    windowMs: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç
    max: 200, // 200 –∏–≥—Ä–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    message: {
        error: '–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞',
        code: 'GAME_RATE_LIMIT_EXCEEDED',
        retryAfter: '10 –º–∏–Ω—É—Ç'
    },

    handler: (req: Request, res: Response) => {
        console.warn(`üéÆ Game rate limit exceeded for IP: ${req.ip}`);

        res.status(429).json({
            error: '–ü—Ä–µ–≤—ã—à–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–≥—Ä—ã',
            message: '–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ –Ω–∞ 10 –º–∏–Ω—É—Ç.',
            retryAfter: 600
        });
    }
});

/**
 * –õ–∏–º–∏—Ç–µ—Ä –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
 * 300 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 5 –º–∏–Ω—É—Ç –Ω–∞ IP
 */
export const apiLimiter = rateLimit({
    windowMs: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
    max: 300, // 300 API –∑–∞–ø—Ä–æ—Å–æ–≤
    message: {
        error: '–õ–∏–º–∏—Ç API –ø—Ä–µ–≤—ã—à–µ–Ω',
        code: 'API_RATE_LIMIT_EXCEEDED',
        retryAfter: '5 –º–∏–Ω—É—Ç'
    },

    handler: (req: Request, res: Response) => {
        console.warn(`üì° API rate limit exceeded for IP: ${req.ip}`);

        res.status(429).json({
            error: '–õ–∏–º–∏—Ç API –ø—Ä–µ–≤—ã—à–µ–Ω',
            message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.',
            retryAfter: 300
        });
    }
});

/**
 * –õ–∏–º–∏—Ç–µ—Ä –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
 * 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –º–∏–Ω—É—Ç—É –Ω–∞ IP
 */
export const staticLimiter = rateLimit({
    windowMs: 60 * 1000, // 1 –º–∏–Ω—É—Ç–∞
    max: 1000, // 1000 —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–≥—Ä—É–∑–æ–∫',
        code: 'STATIC_RATE_LIMIT_EXCEEDED'
    },

    handler: (req: Request, res: Response) => {
        console.warn(`üìÅ Static rate limit exceeded for IP: ${req.ip}`);

        res.status(429).json({
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–≥—Ä—É–∑–æ–∫',
            message: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤.',
            retryAfter: 60
        });
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ª–∏–º–∏—Ç–µ—Ä–æ–≤
const rateLimiters = {
    generalLimiter,
    authLimiter,
    gameLimiter,
    apiLimiter,
    staticLimiter
};

export default rateLimiters; 