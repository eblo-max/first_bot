const mongoose = require('mongoose');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
const connectDB = async () => {
    try {
        const mongoUrl = process.env.MONGO_URL || process.env.MONGODB_URI;
        await mongoose.connect(mongoUrl);
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        process.exit(1);
    }
};

// –ü—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userSchema = new mongoose.Schema({}, { strict: false, collection: 'users' });
const User = mongoose.model('User', userSchema);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const checkStats = async () => {
    try {
        console.log('üìä –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –°–¢–ê–¢–ò–°–¢–ò–ö–ò...\n');

        const users = await User.find({});

        if (users.length === 0) {
            console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        let totalInvestigations = 0;
        let totalScore = 0;
        let totalAchievements = 0;
        let totalGames = 0;
        let usersWithStats = 0;
        let usersWithAchievements = 0;

        console.log('üë• –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
        console.log('‚îÄ'.repeat(80));

        users.forEach((user, index) => {
            const stats = user.stats || {};
            const achievements = user.achievements || [];

            const investigations = stats.investigations || 0;
            const score = stats.totalScore || 0;
            const gamesPlayed = stats.investigations || 0;
            const accuracy = stats.accuracy || 0;
            const level = stats.level || 1;

            console.log(`${index + 1}. ${user.username || user.firstName || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${user.telegramId})`);
            console.log(`   üîç –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: ${investigations} | üíØ –û—á–∫–∏: ${score} | üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ${accuracy}%`);
            console.log(`   üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: ${achievements.length} | üìä –£—Ä–æ–≤–µ–Ω—å: ${level} | üë§ –†–∞–Ω–≥: ${user.rank || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
            console.log('');

            totalInvestigations += investigations;
            totalScore += score;
            totalAchievements += achievements.length;
            totalGames += gamesPlayed;

            if (investigations > 0 || score > 0) usersWithStats++;
            if (achievements.length > 0) usersWithAchievements++;
        });

        console.log('‚ïê'.repeat(80));
        console.log('üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log(`üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
        console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é: ${usersWithStats}`);
        console.log(`üèÜ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏: ${usersWithAchievements}`);
        console.log(`üîç –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: ${totalInvestigations}`);
        console.log(`üíØ –û–±—â–∏–π —Å—á–µ—Ç: ${totalScore}`);
        console.log(`üèÜ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${totalAchievements}`);
        console.log(`üéÆ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä: ${totalGames}`);

        // –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        const topUsers = users
            .sort((a, b) => (b.stats?.totalScore || 0) - (a.stats?.totalScore || 0))
            .slice(0, 5);

        if (topUsers.length > 0 && topUsers[0].stats?.totalScore > 0) {
            console.log('\nüèÜ –¢–û–ü-5 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
            topUsers.forEach((user, index) => {
                const score = user.stats?.totalScore || 0;
                const achievements = (user.achievements || []).length;
                console.log(`${index + 1}. ${user.username || user.firstName || '–ë–µ–∑ –∏–º–µ–Ω–∏'} - ${score} –æ—á–∫–æ–≤, ${achievements} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π`);
            });
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã
        if (totalScore === 0 && totalAchievements === 0) {
            console.log('\n‚úÖ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–õ–ù–û–°–¢–¨–Æ –û–ë–ù–£–õ–ï–ù–ê');
        } else if (usersWithStats > 0) {
            console.log('\nüìä –ë–ê–ó–ê –°–û–î–ï–†–ñ–ò–¢ –ê–ö–¢–ò–í–ù–£–Æ –°–¢–ê–¢–ò–°–¢–ò–ö–£');
        } else {
            console.log('\n‚ùì –°–û–°–¢–û–Ø–ù–ò–ï –ë–ê–ó–´ –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–û–ï');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        throw error;
    }
};

// –ó–∞–ø—É—Å–∫
const main = async () => {
    try {
        await connectDB();
        await checkStats();
        process.exit(0);
    } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        process.exit(1);
    }
};

main(); 