#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π crime-app.js –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
 */

console.log('üß™ –¢–ï–°–¢ –§–£–ù–ö–¶–ò–ô –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ò');
console.log('=====================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–µ—Ä—Ç–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω
const fs = require('fs');
const path = require('path');

const appJsPath = path.join(__dirname, '..', 'public', 'app.js');
const crimeAppJsPath = path.join(__dirname, '..', 'public', 'crime-app.js');

console.log('\nüìÅ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ app.js —É–¥–∞–ª–µ–Ω
if (!fs.existsSync(appJsPath)) {
    console.log('‚úÖ app.js —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
} else {
    console.log('‚ùå app.js –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ crime-app.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
if (fs.existsSync(crimeAppJsPath)) {
    console.log('‚úÖ crime-app.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

    const content = fs.readFileSync(crimeAppJsPath, 'utf8');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    const functionsToCheck = [
        'clearAppCache',
        'verifyExistingToken',
        'authorize',
        'provideFeedback',
        'initAppWithAuth'
    ];

    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ù–ï–°–ï–ù–ù–´–• –§–£–ù–ö–¶–ò–ô:');

    let allFunctionsPresent = true;
    functionsToCheck.forEach(funcName => {
        if (content.includes(`function ${funcName}`)) {
            console.log(`‚úÖ ${funcName}() - –Ω–∞–π–¥–µ–Ω–∞`);
        } else {
            console.log(`‚ùå ${funcName}() - –ù–ï –Ω–∞–π–¥–µ–Ω–∞`);
            allFunctionsPresent = false;
        }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
    console.log('\nüåê –ü–†–û–í–ï–†–ö–ê –ì–õ–û–ë–ê–õ–¨–ù–´–• –≠–ö–°–ü–û–†–¢–û–í:');

    const globalExports = [
        'window.clearAppCache',
        'window.authorize',
        'window.CriminalBluffApp'
    ];

    globalExports.forEach(exportName => {
        if (content.includes(exportName)) {
            console.log(`‚úÖ ${exportName} - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω`);
        } else {
            console.log(`‚ùå ${exportName} - –ù–ï —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω`);
            allFunctionsPresent = false;
        }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    const stats = fs.statSync(crimeAppJsPath);
    const fileSizeKB = (stats.size / 1024).toFixed(2);
    console.log(`\nüìä –†–ê–ó–ú–ï–† –§–ê–ô–õ–ê: ${fileSizeKB} KB`);

    if (allFunctionsPresent) {
        console.log('\nüéâ –í–°–ï –§–£–ù–ö–¶–ò–ò –£–°–ü–ï–®–ù–û –ü–ï–†–ï–ù–ï–°–ï–ù–´!');
    } else {
        console.log('\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –§–£–ù–ö–¶–ò–ò –ù–ï –ù–ê–ô–î–ï–ù–´');
    }

} else {
    console.log('‚ùå crime-app.js –ù–ï –Ω–∞–π–¥–µ–Ω!');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ HTML
const gameHtmlPath = path.join(__dirname, '..', 'public', 'game.html');
if (fs.existsSync(gameHtmlPath)) {
    const htmlContent = fs.readFileSync(gameHtmlPath, 'utf8');

    console.log('\nüìÑ –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –í HTML:');

    if (htmlContent.includes('crime-app.js')) {
        console.log('‚úÖ crime-app.js –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ game.html');
    } else {
        console.log('‚ùå crime-app.js –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ game.html');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¢–û–õ–¨–ö–û –ø—Ä—è–º—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è app.js (–Ω–µ telegram-web-app.js)
    if (htmlContent.includes('src="app.js"') || htmlContent.includes("src='app.js'") || htmlContent.includes('src="./app.js"')) {
        console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ app.js –≤ HTML (–≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å)');
    } else {
        console.log('‚úÖ –£–ø–æ–º–∏–Ω–∞–Ω–∏–π app.js –≤ HTML –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
}

console.log('\n=====================================');
console.log('‚ú® –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù'); 