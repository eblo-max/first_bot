/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
 */

const mongoose = require('mongoose');
const User = require('../src/models/User');
require('dotenv').config();

/**
 * –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
const cleanupTestUsers = async () => {
    try {
        console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
        await mongoose.connect(process.env.MONGO_URL || 'mongodb://localhost:27017/criminal-bluff', {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });

        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const totalUsers = await User.countDocuments();
        console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}`);

        // –ò—â–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–æ—á–µ–Ω—å —Å—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏!)
        const testUserQuery = {
            $or: [
                { telegramId: { $regex: /^guest_\d+$/ } },    // –¢–æ–ª—å–∫–æ —Ç–æ—á–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω guest_123
                { telegramId: { $regex: /^test_token_/ } },   // –¢–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω—ã –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å test_token_
                {
                    $and: [
                        { firstName: 'Test' },
                        { lastName: 'User' },
                        { telegramId: { $lt: 100000 } }  // –¢–æ–ª—å–∫–æ –º–∞–ª–µ–Ω—å–∫–∏–µ ID (—è–≤–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã–µ)
                    ]
                }
            ]
        };

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–π–¥–µ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        const testUsers = await User.find(testUserQuery).select('telegramId firstName lastName createdAt').limit(10);

        if (testUsers.length === 0) {
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        console.log('üîç –ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
        testUsers.forEach(user => {
            console.log(`   - ID: ${user.telegramId}, –ò–º—è: ${user.firstName} ${user.lastName}, –°–æ–∑–¥–∞–Ω: ${user.createdAt}`);
        });

        const totalTestUsers = await User.countDocuments(testUserQuery);
        console.log(`üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ${totalTestUsers}`);

        // –í–ù–ò–ú–ê–ù–ò–ï: –¢—Ä–µ–±—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!
        console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–µ–π—á–∞—Å –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!');
        console.log('‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ä–µ–¥–∏ –Ω–∏—Ö –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!');
        console.log('‚ö†Ô∏è  –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å —Ñ–ª–∞–≥–æ–º --confirm');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–ª–∞–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        if (!process.argv.includes('--confirm')) {
            console.log('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ —Ñ–ª–∞–≥ --confirm');
            return;
        }

        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const result = await User.deleteMany(testUserQuery);
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.deletedCount}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const remainingUsers = await User.countDocuments();
        console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: ${remainingUsers}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    } finally {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        await mongoose.connection.close();
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
        process.exit(0);
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    cleanupTestUsers().catch(console.error);
}

module.exports = { cleanupTestUsers }; 