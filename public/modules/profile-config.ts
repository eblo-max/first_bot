/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π Criminal Trust
 * –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Ä–æ–≤–Ω–µ–π, —Ä–∞–Ω–≥–æ–≤ –∏ –æ–ø—ã—Ç–∞
 */

import type { LevelSystem, Achievement, ProfileConfig, Rank, CrimeTypeMasteryConfig } from '../types/profile-types.js';

// =============================================================================
// –°–ò–°–¢–ï–ú–ê –£–†–û–í–ù–ï–ô –ò –†–ê–ù–ì–û–í
// =============================================================================

const LEVEL_XP_REQUIREMENTS: number[] = [
    // –ü–µ—Ä–≤—ã–µ —É—Ä–æ–≤–Ω–∏ (–Ω–æ–≤–∏—á–∫–∏) - –º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è
    500,     // 1: ~10 –∏–≥—Ä
    1200,    // 2: ~14 –∏–≥—Ä  
    2500,    // 3: ~26 –∏–≥—Ä
    4500,    // 4: ~40 –∏–≥—Ä
    7500,    // 5: ~60 –∏–≥—Ä

    // –°—Ä–µ–¥–Ω–∏–µ —É—Ä–æ–≤–Ω–∏ (–¥–µ—Ç–µ–∫—Ç–∏–≤—ã) - –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è  
    12000,   // 6: ~84 –∏–≥—Ä—ã
    18000,   // 7: ~120 –∏–≥—Ä
    26000,   // 8: ~160 –∏–≥—Ä
    36000,   // 9: ~200 –∏–≥—Ä
    50000,   // 10: ~250 –∏–≥—Ä

    // –í—ã—Å–æ–∫–∏–µ —É—Ä–æ–≤–Ω–∏ (—ç–∫—Å–ø–µ—Ä—Ç—ã) - –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
    70000,   // 11: ~320 –∏–≥—Ä
    95000,   // 12: ~420 –∏–≥—Ä
    130000,  // 13: ~550 –∏–≥—Ä
    175000,  // 14: ~700 –∏–≥—Ä
    235000,  // 15: ~900 –∏–≥—Ä

    // –ú–∞—Å—Ç–µ—Ä—Å–∫–∏–µ —É—Ä–æ–≤–Ω–∏ (–ª–µ–≥–µ–Ω–¥—ã) - –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ
    315000,  // 16: ~1200 –∏–≥—Ä
    420000,  // 17: ~1600 –∏–≥—Ä
    560000,  // 18: ~2100 –∏–≥—Ä
    750000,  // 19: ~2800 –∏–≥—Ä
    1000000  // 20: ~3700 –∏–≥—Ä (–º–∞–∫—Å–∏–º—É–º)
];

const RANKS: Rank[] = [
    // –ù–æ–≤–∏—á–∫–∏ (1-5)
    { name: '–ü–û–î–û–ó–†–ï–í–ê–ï–ú–´–ô', color: '#666666', icon: 'üî∞' },
    { name: '–°–¢–ê–ñ–ï–†', color: '#888888', icon: 'üëÆ‚Äç‚ôÇÔ∏è' },
    { name: '–ü–ê–¢–†–£–õ–¨–ù–´–ô', color: '#999999', icon: 'üöî' },
    { name: '–°–ï–†–ñ–ê–ù–¢', color: '#AAAAAA', icon: '‚≠ê' },
    { name: '–î–ï–¢–ï–ö–¢–ò–í', color: '#4169E1', icon: 'üïµÔ∏è' },

    // –°—Ä–µ–¥–Ω–∏–µ (6-10) 
    { name: '–°–¢.–î–ï–¢–ï–ö–¢–ò–í', color: '#1E90FF', icon: 'üïµÔ∏è‚Äç‚ôÇÔ∏è' },
    { name: '–ò–ù–°–ü–ï–ö–¢–û–†', color: '#00BFFF', icon: 'üë®‚Äçüíº' },
    { name: '–°–¢.–ò–ù–°–ü–ï–ö–¢–û–†', color: '#87CEEB', icon: 'üë®‚Äçüíº' },
    { name: '–õ–ï–ô–¢–ï–ù–ê–ù–¢', color: '#FFD700', icon: 'üéñÔ∏è' },
    { name: '–ö–ê–ü–ò–¢–ê–ù', color: '#FFA500', icon: 'üëë' },

    // –í—ã—Å–æ–∫–∏–µ (11-15)
    { name: '–ú–ê–ô–û–†', color: '#FF6347', icon: 'üî•' },
    { name: '–ü–û–î–ü–û–õ–ö–û–í–ù–ò–ö', color: '#FF4500', icon: 'üí´' },
    { name: '–ü–û–õ–ö–û–í–ù–ò–ö', color: '#DC143C', icon: '‚ö°' },
    { name: '–ì–ï–ù–ï–†–ê–õ', color: '#B22222', icon: 'üíé' },
    { name: '–®–ï–§ –ü–û–õ–ò–¶–ò–ò', color: '#8B0000', icon: 'üë®‚Äç‚öñÔ∏è' },

    // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ (16-20)
    { name: '–ö–û–ú–ò–°–°–ê–†', color: '#800080', icon: 'üåü' },
    { name: '–°–£–ü.–ö–û–ú–ò–°–°–ê–†', color: '#9400D3', icon: '‚ú®' },
    { name: '–ú–ê–°–¢–ï–†-–î–ï–¢–ï–ö–¢–ò–í', color: '#4B0082', icon: 'üèÜ' },
    { name: '–ì–†–ê–ù–î-–ú–ê–°–¢–ï–†', color: '#191970', icon: 'üí´' },
    { name: '–õ–ï–ì–ï–ù–î–ê', color: '#000080', icon: 'üëë' }
];

// =============================================================================
// –§–£–ù–ö–¶–ò–ò –°–ò–°–¢–ï–ú–´ –£–†–û–í–ù–ï–ô
// =============================================================================

export const getRankByLevel = (level: number): Rank => {
    const index = Math.min(Math.max(level - 1, 0), RANKS.length - 1);
    return RANKS[index];
};

export const getMaxXPForLevel = (level: number): number => {
    const index = Math.min(Math.max(level - 1, 0), LEVEL_XP_REQUIREMENTS.length - 1);
    return LEVEL_XP_REQUIREMENTS[index];
};

export const calculateLevel = (totalScore: number): number => {
    let level = 1;
    for (let i = 0; i < LEVEL_XP_REQUIREMENTS.length; i++) {
        if (totalScore >= LEVEL_XP_REQUIREMENTS[i]) {
            level = i + 2; // +1 for array index, +1 for next level
        } else {
            break;
        }
    }
    return Math.min(level, LEVEL_XP_REQUIREMENTS.length + 1);
};

export const calculateXP = (totalScore: number, level: number): number => {
    const currentLevelXP = level > 1 ? LEVEL_XP_REQUIREMENTS[level - 2] : 0;
    return totalScore - currentLevelXP;
};

export const getXPProgress = (totalScore: number, level: number): number => {
    const currentXP = calculateXP(totalScore, level);
    const maxXP = getMaxXPForLevel(level);
    const currentLevelXP = level > 1 ? LEVEL_XP_REQUIREMENTS[level - 2] : 0;
    const nextLevelXP = LEVEL_XP_REQUIREMENTS[level - 1] || LEVEL_XP_REQUIREMENTS[LEVEL_XP_REQUIREMENTS.length - 1];

    const xpInCurrentLevel = totalScore - currentLevelXP;
    const xpNeededForNextLevel = nextLevelXP - currentLevelXP;

    return Math.min((xpInCurrentLevel / xpNeededForNextLevel) * 100, 100);
};

// =============================================================================
// –ú–ê–°–¢–ï–†–°–¢–í–û –¢–ò–ü–û–í –ü–†–ï–°–¢–£–ü–õ–ï–ù–ò–ô
// =============================================================================

export const CRIME_TYPE_MASTERY: Record<string, CrimeTypeMasteryConfig> = {
    murder: { name: '–£–±–∏–π—Å—Ç–≤–∞', icon: 'üî™', maxLevel: 10 },
    robbery: { name: '–û–≥—Ä–∞–±–ª–µ–Ω–∏—è', icon: 'üí∞', maxLevel: 10 },
    fraud: { name: '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', icon: 'üí≥', maxLevel: 10 },
    theft: { name: '–ö—Ä–∞–∂–∏', icon: 'üèÉ‚Äç‚ôÇÔ∏è', maxLevel: 10 },
    cybercrime: { name: '–ö–∏–±–µ—Ä–ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è', icon: 'üíª', maxLevel: 10 }
};

// =============================================================================
// –ú–ù–û–ñ–ò–¢–ï–õ–ò –û–ü–´–¢–ê
// =============================================================================

export const EXPERIENCE_MULTIPLIERS = {
    // –ë–∞–∑–æ–≤—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ –ø–æ —Ç–∏–ø–∞–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    perfect_game: 1.5,        // +50% –∑–∞ –∏–¥–µ–∞–ª—å–Ω—É—é –∏–≥—Ä—É (5/5)
    speed_bonus: 1.3,         // +30% –∑–∞ –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã
    difficulty_master: 1.4,   // +40% –∑–∞ —Å–ª–æ–∂–Ω—ã–µ –¥–µ–ª–∞
    consistency: 1.2,         // +20% –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∏–≥—Ä—É
    streak_bonus: 1.6,        // +60% –∑–∞ —Å–µ—Ä–∏–∏ –ø–æ–±–µ–¥

    // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    achievement_unlock: 2.0,  // +100% –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è

    // –°–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    weekend_bonus: 1.1,       // +10% –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ
    daily_first_game: 1.25,   // +25% –∑–∞ –ø–µ—Ä–≤—É—é –∏–≥—Ä—É –¥–Ω—è

    // –®—Ç—Ä–∞—Ñ—ã –∑–∞ "—Ñ–∞—Ä–º"
    same_hour_penalty: 0.8,   // -20% –∑–∞ >3 –∏–≥—Ä –≤ —á–∞—Å
    same_day_penalty: 0.9     // -10% –∑–∞ >10 –∏–≥—Ä –≤ –¥–µ–Ω—å
};

// =============================================================================
// –û–°–ù–û–í–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
// =============================================================================

export const ACHIEVEMENTS_CONFIG: Achievement[] = [
    {
        id: 'first_blood',
        name: '–ü–µ—Ä–≤–∞—è —É–ª–∏–∫–∞',
        icon: 'üîç',
        description: '–†–µ—à–∏–ª–∏ –ø–µ—Ä–≤–æ–µ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ –¥–µ–ª–æ',
        category: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
        requirement: { type: 'investigations', value: 1 },
        rarity: 'common',
        sound: 'success-light',
        isUnlocked: false
    },
    {
        id: 'rookie_investigator',
        name: '–ù–∞—á–∏–Ω–∞—é—â–∏–π —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
        icon: 'üïµÔ∏è',
        description: '–†–µ—à–∏–ª–∏ 10 –¥–µ–ª',
        category: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
        requirement: { type: 'investigations', value: 10 },
        rarity: 'common',
        sound: 'success-medium',
        isUnlocked: false
    },
    {
        id: 'case_closer',
        name: '–ó–∞–∫—Ä—ã–≤–∞—Ç–µ–ª—å –¥–µ–ª',
        icon: 'üìù',
        description: '–†–µ—à–∏–ª–∏ 50 –¥–µ–ª',
        category: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
        requirement: { type: 'investigations', value: 50 },
        rarity: 'rare',
        sound: 'success-medium',
        isUnlocked: false
    },
    {
        id: 'crime_solver',
        name: '–†–∞—Å–∫—Ä—ã–≤–∞—Ç–µ–ª—å –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π',
        icon: '‚öñÔ∏è',
        description: '–†–µ—à–∏–ª–∏ 100 –¥–µ–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ',
        category: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
        requirement: { type: 'investigations', value: 100 },
        rarity: 'rare',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'detective_veteran',
        name: '–í–µ—Ç–µ—Ä–∞–Ω –¥–µ—Ç–µ–∫—Ç–∏–≤',
        icon: 'üéñÔ∏è',
        description: '–†–µ—à–∏–ª–∏ 250 –¥–µ–ª',
        category: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
        requirement: { type: 'investigations', value: 250 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'sharp_shooter',
        name: '–ú–µ—Ç–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫',
        icon: 'üéØ',
        description: '–¢–æ—á–Ω–æ—Å—Ç—å 70% –≤ 50+ –¥–µ–ª–∞—Ö',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'accuracy', value: 70, minGames: 50 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'eagle_eye',
        name: '–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑',
        icon: 'üëÅÔ∏è',
        description: '–¢–æ—á–Ω–æ—Å—Ç—å 80% –≤ 100+ –¥–µ–ª–∞—Ö',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'accuracy', value: 80, minGames: 100 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'master_detective',
        name: '–ú–∞—Å—Ç–µ—Ä-–¥–µ—Ç–µ–∫—Ç–∏–≤',
        icon: 'üèÜ',
        description: '–¢–æ—á–Ω–æ—Å—Ç—å 90% –≤ 200+ –¥–µ–ª–∞—Ö',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'accuracy', value: 90, minGames: 200 },
        rarity: 'legendary',
        sound: 'success-legendary',
        isUnlocked: false
    },
    {
        id: 'sherlock',
        name: '–®–µ—Ä–ª–æ–∫ –•–æ–ª–º—Å',
        icon: 'üé©',
        description: '–¢–æ—á–Ω–æ—Å—Ç—å 95% –≤ 300+ –¥–µ–ª–∞—Ö',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'accuracy', value: 95, minGames: 300 },
        rarity: 'legendary',
        sound: 'success-legendary',
        isUnlocked: false
    },
    {
        id: 'perfectionist',
        name: '–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç',
        icon: 'üíé',
        description: '10 —Å–µ—Å—Å–∏–π –ø–æ–¥—Ä—è–¥ –±–µ–∑ –æ—à–∏–±–æ–∫',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'winStreak', value: 10 },
        rarity: 'legendary',
        sound: 'success-legendary',
        isUnlocked: false
    },
    {
        id: 'quick_draw',
        name: '–ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è',
        icon: '‚ö°',
        description: '50 –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ 15 —Å–µ–∫—É–Ω–¥',
        category: '–°–∫–æ—Ä–æ—Å—Ç—å',
        requirement: { type: 'fastGame', value: 15, minGames: 50 },
        rarity: 'rare',
        sound: 'success-medium',
        isUnlocked: false
    },
    {
        id: 'speed_demon',
        name: '–î–µ–º–æ–Ω —Å–∫–æ—Ä–æ—Å—Ç–∏',
        icon: 'üí®',
        description: '100 –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ 10 —Å–µ–∫—É–Ω–¥',
        category: '–°–∫–æ—Ä–æ—Å—Ç—å',
        requirement: { type: 'fastGame', value: 10, minGames: 100 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'hot_streak',
        name: '–ì–æ—Ä—è—á–∞—è —Å–µ—Ä–∏—è',
        icon: 'üî•',
        description: '10 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'winStreak', value: 10 },
        rarity: 'rare',
        sound: 'success-medium',
        isUnlocked: false
    },
    {
        id: 'unstoppable',
        name: '–ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π',
        icon: 'üí™',
        description: '25 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'winStreak', value: 25 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'legend_streak',
        name: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è —Å–µ—Ä–∏—è',
        icon: 'üëë',
        description: '50 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥',
        category: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
        requirement: { type: 'winStreak', value: 50 },
        rarity: 'legendary',
        sound: 'success-legendary',
        isUnlocked: false
    },
    {
        id: 'score_hunter',
        name: '–û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –æ—á–∫–∞–º–∏',
        icon: 'üí∞',
        description: '100,000 –æ—á–∫–æ–≤ –Ω–∞–±—Ä–∞–Ω–æ',
        category: '–û—á–∫–∏',
        requirement: { type: 'totalScore', value: 100000 },
        rarity: 'epic',
        sound: 'success-heavy',
        isUnlocked: false
    },
    {
        id: 'point_legend',
        name: '–õ–µ–≥–µ–Ω–¥–∞ –æ—á–∫–æ–≤',
        icon: 'üèÜ',
        description: '1,000,000 –æ—á–∫–æ–≤ –Ω–∞–±—Ä–∞–Ω–æ',
        category: '–û—á–∫–∏',
        requirement: { type: 'totalScore', value: 1000000 },
        rarity: 'legendary',
        sound: 'success-legendary',
        isUnlocked: false
    }
];

// =============================================================================
// –û–°–ù–û–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –£–†–û–í–ù–ï–ô
// =============================================================================

export const LEVEL_SYSTEM: LevelSystem = {
    maxXP: LEVEL_XP_REQUIREMENTS,
    getRankByLevel,
    experienceMultipliers: EXPERIENCE_MULTIPLIERS,
    crimeTypeMastery: CRIME_TYPE_MASTERY
};

// =============================================================================
// –ü–û–õ–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–û–§–ò–õ–Ø
// =============================================================================

export const PROFILE_CONFIG: ProfileConfig = {
    levels: LEVEL_SYSTEM,
    achievements: ACHIEVEMENTS_CONFIG,
    ui: {
        theme: {
            primary: '#1a1a1a',
            secondary: '#2d2d2d',
            accent: '#ff4757',
            background: '#000000',
            text: '#ffffff',
            criminalRed: '#ff3838',
            darkBlue: '#1e3a8a'
        },
        animations: {
            duration: {
                short: 200,
                medium: 500,
                long: 1000
            },
            easing: {
                standard: 'cubic-bezier(0.4, 0.0, 0.2, 1)',
                dramatic: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',
                bounce: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)'
            }
        },
        effects: {
            particles: {
                maxCount: 50,
                lifetime: 3000,
                gravity: 0.5
            },
            glitch: {
                intensity: 10,
                frequency: 100
            },
            scan: {
                speed: 2000,
                opacity: 0.3
            }
        }
    }
};

// =============================================================================
// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–°–ß–ï–¢–ê –ü–†–û–ì–†–ï–°–°–ê –î–û–°–¢–ò–ñ–ï–ù–ò–ô
// =============================================================================

export const calculateAchievementProgress = (
    achievementId: string,
    userStats: any
): number => {
    const achievement = ACHIEVEMENTS_CONFIG.find(a => a.id === achievementId);
    if (!achievement || achievement.isUnlocked) return 100;

    const { requirement } = achievement;
    let currentValue = 0;

    switch (requirement.type) {
        case 'investigations':
            currentValue = userStats.gamesPlayed || 0;
            break;
        case 'accuracy':
            if ((userStats.gamesPlayed || 0) >= (requirement.minGames || 0)) {
                currentValue = userStats.accuracy || 0;
            }
            break;
        case 'winStreak':
            currentValue = userStats.maxWinStreak || 0;
            break;
        case 'totalScore':
            currentValue = userStats.totalScore || 0;
            break;
        case 'perfectGames':
            currentValue = userStats.perfectGames || 0;
            break;
        case 'fastGame':
            // –õ–æ–≥–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∏–≥—Ä —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            currentValue = 0;
            break;
        default:
            currentValue = 0;
    }

    return Math.min((currentValue / requirement.value) * 100, 100);
};

// =============================================================================
// –≠–ö–°–ü–û–†–¢ –í–°–ï–• –§–£–ù–ö–¶–ò–ô –ò –ö–û–ù–°–¢–ê–ù–¢
// =============================================================================

export {
    LEVEL_XP_REQUIREMENTS,
    RANKS
}; 