/**
 * üîê –ú–û–î–£–õ–¨ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */

import { AppGameData } from './game-core.js';
import { TelegramWebAppData } from './types.js';

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */
export async function verifyExistingToken(token: string): Promise<boolean> {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');

        const response = await fetch('/api/auth/verify', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

            // –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            AppGameData.token = token;
            return true;
        } else {
            console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');

            // –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω - –æ—á–∏—â–∞–µ–º
            localStorage.removeItem('token');
            localStorage.removeItem('auth_token');
            localStorage.removeItem('user');
            AppGameData.token = null;
            return false;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', error);

        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ - —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º
        console.warn('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º');
        AppGameData.token = token;
        return true;
    }
}

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram WebApp
 */
export async function authorize(tg: TelegramWebAppData): Promise<boolean> {
    try {
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–æ–∫–µ–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        const oldToken = localStorage.getItem('token');
        if (oldToken && oldToken.includes('guest_')) {
            localStorage.removeItem('token');
            console.log('üóëÔ∏è –ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—ã–π –≥–æ—Å—Ç–µ–≤–æ–π —Ç–æ–∫–µ–Ω, –æ—á–∏—â–∞–µ–º localStorage');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ initData –æ—Ç Telegram
        if (!tg.initData || tg.initData.trim() === '') {
            console.error('‚ùå Telegram WebApp initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç');
            throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        const telegramUser = tg.initDataUnsafe?.user;
        if (telegramUser) {
            console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram:', telegramUser.id || telegramUser.first_name || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
        } else {
            console.log('‚ö†Ô∏è initDataUnsafe.user –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ initData –µ—Å—Ç—å - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const response = await fetch('/api/auth/init', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                initData: tg.initData
            })
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${response.status} - ${errorText}`);
            throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${response.status}`);
        }

        const data = await response.json();

        if (!data.data || !data.data.token) {
            throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        AppGameData.token = data.data.token;

        localStorage.setItem('token', data.data.token);
        localStorage.setItem('auth_token', data.data.token);
        localStorage.setItem('user', JSON.stringify(data.data.user));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º initData –¥–ª—è –±—É–¥—É—â–∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
        if (tg.initData) {
            localStorage.setItem('initData', tg.initData);
        }

        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', data.data.user?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
        return true;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API —Å–µ—Ä–≤–µ—Ä–∞
            const healthResponse = await fetch('/api/health');
            if (healthResponse.ok) {
                console.log('üè• API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π Telegram');
            }
        } catch (e) {
            console.error('üí• API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', e);
        }

        return false;
    }
}

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–æ–∫–µ–Ω–æ–≤
 */
export async function initAppWithAuth(initApp: () => void, tg: TelegramWebAppData): Promise<void> {
    try {
        // –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        initApp();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã
        const existingToken = localStorage.getItem('token') || localStorage.getItem('auth_token');

        if (existingToken && !existingToken.startsWith('test_token_') && !existingToken.startsWith('guest_')) {
            console.log('üîë –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å');
            const isValid = await verifyExistingToken(existingToken);

            if (!isValid) {
                // –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
                console.log('üîÑ –ü—Ä–æ–±—É–µ–º –Ω–æ–≤—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
                await authorize(tg);
            }
        } else if (tg && tg.initData && !tg.initData.includes('test_mode_data')) {
            // –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ Telegram - –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
            console.log('üÜï –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            await authorize(tg);
        } else {
            console.log('üß™ –†–µ–∂–∏–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Ç–µ—Å—Ç–æ–≤—ã–π –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π)');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }
} 