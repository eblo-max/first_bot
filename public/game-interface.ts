/**
 * üéÆ –ò–ì–†–û–í–û–ô –ò–ù–¢–ï–†–§–ï–ô–° "–ö–†–ò–ú–ò–ù–ê–õ–¨–ù–´–ô –ë–õ–ï–§"
 * –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã–º —ç–∫—Ä–∞–Ω–æ–º
 * 
 * –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–º UI
 * - Telegram WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
 * - –¢–∞–π–º–µ—Ä –∏ —Å—á–µ—Ç—á–∏–∫–∏
 * - –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
 */

// =============== –¢–ò–ü–´ –ò –ò–ù–¢–ï–†–§–ï–ô–°–´ ===============

type Difficulty = 'easy' | 'medium' | 'hard';

interface GameMistake {
    id: string;
    text: string;
}

interface GameStory {
    title: string;
    date: string;
    difficulty: Difficulty;
    content: string;
    mistakes: GameMistake[];
}

interface GameData {
    currentStoryIndex: number;
    stories: GameStory[];
    score: number;
    currentStory: GameStory;
    timerDuration: number;
    timer?: number | null;
    answerSelected?: boolean;
}

interface GameResult {
    correct: boolean;
    explanation: string;
    pointsEarned: number;
}

interface GameFinishResult {
    totalScore: number;
    correctAnswers: number;
    totalQuestions: number;
}

interface GameInterfaceElements {
    questionProgress: HTMLElement | null;
    scoreDisplay: HTMLElement | null;
    timerValue: HTMLElement | null;
    timerBar: HTMLElement | null;
    storyTitle: HTMLElement | null;
    storyDate: HTMLElement | null;
    storyDifficulty: HTMLElement | null;
    storyContent: HTMLElement | null;
    storyEvidenceId: HTMLElement | null;
    answersContainer: HTMLElement | null;
    resultSection: HTMLElement | null;
    resultBadge: HTMLElement | null;
    resultHeader: HTMLElement | null;
    resultExplanation: HTMLElement | null;
    resultPoints: HTMLElement | null;
    actionButton: HTMLElement | null;
}

// –¢–∏–ø—ã –¥–ª—è Telegram WebApp (–ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞)
interface TelegramWebApp {
    ready(): void;
    expand(): void;
    BackButton: {
        show(): void;
        onClick(callback: () => void): void;
    };
    HapticFeedback?: {
        impactOccurred(type: 'light' | 'medium' | 'heavy'): void;
    };
}

// =============== –û–°–ù–û–í–ù–û–ô –ö–õ–ê–°–° –ò–ì–†–û–í–û–ì–û –ò–ù–¢–ï–†–§–ï–ô–°–ê ===============

class GameInterfaceClass {
    /**
     * –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    public readonly elements: GameInterfaceElements;

    constructor() {
        this.elements = {
            questionProgress: document.getElementById('question-progress'),
            scoreDisplay: document.getElementById('score-display'),
            timerValue: document.getElementById('timer-value'),
            timerBar: document.getElementById('timer-bar'),
            storyTitle: document.getElementById('story-title'),
            storyDate: document.getElementById('story-date'),
            storyDifficulty: document.getElementById('story-difficulty'),
            storyContent: document.getElementById('story-content'),
            storyEvidenceId: document.getElementById('story-evidence-id'),
            answersContainer: document.getElementById('answers-container'),
            resultSection: document.getElementById('result-section'),
            resultBadge: document.getElementById('result-badge'),
            resultHeader: document.getElementById('result-header'),
            resultExplanation: document.getElementById('result-explanation'),
            resultPoints: document.getElementById('result-points'),
            actionButton: document.getElementById('action-button')
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    public init(): void {
        console.log('üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        this.initTelegramWebApp();

        console.log('‚úÖ –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
     */
    private initTelegramWebApp(): void {
        const telegram = (window as any).Telegram;

        if (telegram?.WebApp) {
            console.log('üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram WebApp...');

            const webApp = telegram.WebApp as TelegramWebApp;

            // –†–∞—Å—à–∏—Ä—è–µ–º WebApp
            webApp.expand();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã
            webApp.BackButton.show();

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            webApp.BackButton.onClick(() => {
                const shouldExit = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∏–≥—Ä—É?');
                if (shouldExit) {
                    window.location.href = '/';
                }
            });

            // –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
            webApp.ready();

            console.log('‚úÖ Telegram WebApp –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ÑπÔ∏è Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—É—Å–∫ –Ω–µ –≤ Telegram)');
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    private setupEventListeners(): void {
        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
        document.addEventListener('click', this.handleButtonClick.bind(this));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º –∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    private handleButtonClick(event: Event): void {
        const target = event.target as HTMLElement;

        // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-action
        const actionElement = target.closest('[data-action]') as HTMLElement;

        if (!actionElement) return;

        // –ü–æ–ª—É—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞
        const action = actionElement.getAttribute('data-action');

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
        this.triggerHapticFeedback();

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        switch (action) {
            case 'selectAnswer':
                this.handleSelectAnswer(actionElement);
                break;

            case 'nextQuestion':
                this.handleNextQuestion();
                break;

            case 'goToMain':
                this.handleGoToMain();
                break;

            default:
                console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
        }
    }

    /**
     * –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
     */
    private triggerHapticFeedback(): void {
        const telegram = (window as any).Telegram;

        if (telegram?.WebApp?.HapticFeedback) {
            telegram.WebApp.HapticFeedback.impactOccurred('light');
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
     */
    private handleSelectAnswer(actionElement: HTMLElement): void {
        const mistakeId = actionElement.getAttribute('data-mistake-id');

        if (!mistakeId) {
            console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç data-mistake-id —É —ç–ª–µ–º–µ–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞');
            return;
        }

        // –Ø–≤–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ GameData
        const gameData = (window as any).GameData as GameData | undefined;

        if (gameData?.timer) {
            clearInterval(gameData.timer);
            gameData.timer = null;
            gameData.answerSelected = true;
        }

        // –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        this.disableAnswerOptions();

        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        actionElement.classList.add('selected');

        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
        const selectAnswer = (window as any).selectAnswer;

        if (typeof selectAnswer === 'function') {
            selectAnswer(mistakeId);
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è selectAnswer –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ window');
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
     */
    private handleNextQuestion(): void {
        const nextQuestion = (window as any).nextQuestion;

        if (typeof nextQuestion === 'function') {
            nextQuestion();
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è nextQuestion –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ window');
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    private handleGoToMain(): void {
        window.location.href = '/';
    }

    /**
     * –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
     */
    public disableAnswerOptions(): void {
        const answerOptions = document.querySelectorAll('.answer-option');
        answerOptions.forEach((option) => {
            const element = option as HTMLElement;
            // –£–¥–∞–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç data-action, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∫–ª–∏–∫–∏
            element.removeAttribute('data-action');
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Ç–æ, —á—Ç–æ –≤—ã–±–æ—Ä —Å–¥–µ–ª–∞–Ω
            element.classList.add('disabled');
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
     */
    public updateUI(gameData: GameData): void {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
        if (this.elements.questionProgress) {
            this.elements.questionProgress.textContent =
                `${gameData.currentStoryIndex + 1}/${gameData.stories.length}`;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç
        if (this.elements.scoreDisplay) {
            this.elements.scoreDisplay.textContent = gameData.score.toString();
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—Ä–∏–∏
        if (gameData.currentStory) {
            this.updateStoryInfo(gameData.currentStory, gameData.currentStoryIndex);
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
        this.resetTimer(gameData.timerDuration);

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        this.hideResult();
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å—Ç–æ—Ä–∏–∏
     */
    private updateStoryInfo(story: GameStory, storyIndex: number): void {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if (this.elements.storyTitle) {
            this.elements.storyTitle.textContent = story.title || '–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É
        if (this.elements.storyDate) {
            this.elements.storyDate.textContent = story.date || '01.01.2024';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
        if (this.elements.storyDifficulty) {
            const difficultyText: Record<Difficulty, string> = {
                'easy': '–°–õ–û–ñ–ù–û–°–¢–¨: –õ–ï–ì–ö–ê–Ø',
                'medium': '–°–õ–û–ñ–ù–û–°–¢–¨: –°–†–ï–î–ù–Ø–Ø',
                'hard': '–°–õ–û–ñ–ù–û–°–¢–¨: –í–´–°–û–ö–ê–Ø'
            };
            this.elements.storyDifficulty.textContent =
                difficultyText[story.difficulty] || '–°–õ–û–ñ–ù–û–°–¢–¨: –°–†–ï–î–ù–Ø–Ø';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        if (this.elements.storyContent) {
            this.elements.storyContent.innerHTML = story.content || '–û–ø–∏—Å–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —É–ª–∏–∫–∏
        if (this.elements.storyEvidenceId) {
            const evidenceId = String(storyIndex + 1).padStart(2, '0');
            this.elements.storyEvidenceId.textContent = evidenceId;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        this.updateAnswers(story.mistakes);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
     */
    private updateAnswers(mistakes: GameMistake[]): void {
        if (!this.elements.answersContainer) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.elements.answersContainer.innerHTML = '';

        // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        const markers = ['A', 'B', 'C', 'D', 'E'];

        mistakes.forEach((mistake, index) => {
            const marker = markers[index] || String(index + 1);

            const answerOption = document.createElement('div');
            answerOption.className = 'answer-option';
            answerOption.setAttribute('data-mistake-id', mistake.id);
            answerOption.setAttribute('data-action', 'selectAnswer');

            answerOption.innerHTML = `
                <div class="answer-marker">${marker}</div>
                <div class="answer-text">${mistake.text}</div>
            `;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
            if (this.elements.answersContainer) {
                this.elements.answersContainer.appendChild(answerOption);
            }
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
     */
    public updateTimer(secondsLeft: number, totalTime: number): void {
        if (!this.elements.timerValue || !this.elements.timerBar) return;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
        this.elements.timerValue.textContent = secondsLeft.toString();

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ—Å—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç–∞–π–º–µ—Ä–∞
        const percentage = (secondsLeft / totalTime) * 100;
        this.elements.timerBar.style.width = `${percentage}%`;

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏
        const timerContainer = document.querySelector('.timer-container') as HTMLElement | null;
        if (timerContainer) {
            if (secondsLeft <= 5) {
                timerContainer.classList.add('urgent');
            } else {
                timerContainer.classList.remove('urgent');
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞
     */
    public showResult(result: GameResult): void {
        if (!this.elements.resultSection) {
            console.error('‚ùå –°–µ–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        console.log('üìä –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', result);

        // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
        this.disableAnswerOptions();

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        this.elements.resultSection.className = result.correct ?
            'results-section result-correct' :
            'results-section result-incorrect';

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if (this.elements.resultBadge) {
            this.elements.resultBadge.textContent = result.correct ? '–í–ï–†–ù–û' : '–û–®–ò–ë–ö–ê';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if (this.elements.resultHeader) {
            this.elements.resultHeader.textContent = result.correct ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        if (this.elements.resultExplanation) {
            this.elements.resultExplanation.textContent = result.explanation || '';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—á–∫–∏
        if (this.elements.resultPoints) {
            this.elements.resultPoints.innerHTML =
                `<span class="points-value">${result.pointsEarned || 0}</span> –û–ß–ö–û–í`;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        this.elements.resultSection.style.display = 'block';

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–µ–π—Å—Ç–≤–∏—è
        if (this.elements.actionButton) {
            this.elements.actionButton.textContent = '–°–õ–ï–î–£–Æ–©–ï–ï –î–ï–õ–û';
            this.elements.actionButton.setAttribute('data-action', 'nextQuestion');
        }
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
     */
    public hideResult(): void {
        if (this.elements.resultSection) {
            this.elements.resultSection.style.display = 'none';
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
     */
    public showGameFinish(gameResult: GameFinishResult): void {
        console.log('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã:', gameResult);

        // –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        // –í –ø–æ–ª–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        window.location.href = '/';
    }

    /**
     * –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
     */
    public resetTimer(totalTime: number): void {
        if (!this.elements.timerValue || !this.elements.timerBar) return;

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
        this.elements.timerValue.textContent = totalTime.toString();

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª–æ—Å—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ 100%
        this.elements.timerBar.style.width = '100%';

        // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        const timerContainer = document.querySelector('.timer-container') as HTMLElement | null;
        if (timerContainer) {
            timerContainer.classList.remove('urgent');
        }
    }
}

// =============== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===============

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞)
const GameInterfaceInstance = new GameInterfaceClass();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    GameInterfaceInstance.init();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
if (typeof window !== 'undefined') {
    (window as any).GameInterface = GameInterfaceInstance;
} 