/**
 * üìù –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø "–ö–†–ò–ú–ò–ù–ê–õ–¨–ù–´–ô –ë–õ–ï–§"
 * –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 * 
 * –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * - Production/Development —Ä–µ–∂–∏–º—ã
 * - –ü–µ—Ä–µ—Ö–≤–∞—Ç –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è console –º–µ—Ç–æ–¥–æ–≤
 */

// =============== –¢–ò–ü–´ –ò –ò–ù–¢–ï–†–§–ï–ô–°–´ ===============

type LogLevel = 'ERROR' | 'WARN' | 'INFO' | 'DEBUG';
type Environment = 'production' | 'development';
type ConsoleMethodType = 'log' | 'warn' | 'error' | 'info' | 'debug';

interface LogLevels {
    ERROR: number;
    WARN: number;
    INFO: number;
    DEBUG: number;
}

interface OriginalConsole {
    log: (...args: any[]) => void;
    warn: (...args: any[]) => void;
    error: (...args: any[]) => void;
    info: (...args: any[]) => void;
    debug: (...args: any[]) => void;
}

interface SanitizedObject {
    [key: string]: any;
}

// =============== –û–°–ù–û–í–ù–û–ô –ö–õ–ê–°–° –õ–û–ì–ì–ï–†–ê ===============

class LoggerClass {
    private readonly environment: Environment;
    private readonly levels: LogLevels;
    private currentLevel: number;
    private originalConsole: OriginalConsole | null = null;

    constructor() {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        this.environment = this.detectEnvironment();

        // –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        this.levels = {
            ERROR: 0,   // –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏
            WARN: 1,    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏
            INFO: 2,    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            DEBUG: 3    // –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        };

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
        this.currentLevel = this.setLogLevel();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
        this.init();
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ URL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     */
    private detectEnvironment(): Environment {
        if (typeof window === 'undefined') {
            return 'development'; // Server-side —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
        const isProduction =
            // –î–æ–º–µ–Ω production
            window.location.hostname.includes('.railway.app') ||
            window.location.hostname.includes('criminal-bluff') ||
            // HTTPS –≤ production
            (window.location.protocol === 'https:' && !window.location.hostname.includes('localhost')) ||
            // –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ debug –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            (!window.location.search.includes('debug=true') && !window.location.search.includes('test=true'));

        return isProduction ? 'production' : 'development';
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
     */
    private setLogLevel(): number {
        switch (this.environment) {
            case 'production':
                return this.levels.ERROR; // –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –≤ production
            case 'development':
                return this.levels.DEBUG; // –í—Å–µ –ª–æ–≥–∏ –≤ development
            default:
                return this.levels.WARN;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    private init(): void {
        // –í production –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log –∏ –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
        if (this.environment === 'production') {
            this.overrideConsole();
        }

        // –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Ç–µ–∫—É—â–µ–º —Ä–µ–∂–∏–º–µ
        if (this.currentLevel >= this.levels.INFO) {
            console.info(`üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${this.environment} (—É—Ä–æ–≤–µ–Ω—å: ${this.getLevelName()})`);
        }
    }

    /**
     * –ü–µ—Ä–µ—Ö–≤–∞—Ç console –º–µ—Ç–æ–¥–æ–≤ –≤ production –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
     */
    private overrideConsole(): void {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        this.originalConsole = {
            log: console.log.bind(console),
            warn: console.warn.bind(console),
            error: console.error.bind(console),
            info: console.info.bind(console),
            debug: console.debug.bind(console)
        };

        // –ó–∞–º–µ–Ω—è–µ–º console.log –Ω–∞ –ø—É—Å—Ç—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ production
        console.log = (): void => { };
        console.debug = (): void => { };

        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
        console.info = this.createFilteredLogger('info');
        console.warn = this.createFilteredLogger('warn');
        console.error = this.createFilteredLogger('error');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
     */
    private createFilteredLogger(type: ConsoleMethodType): (...args: any[]) => void {
        return (...args: any[]): void => {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const filteredArgs = this.sanitizeLogData(args);

            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            if (this.originalConsole && this.originalConsole[type]) {
                this.originalConsole[type](...filteredArgs);
            }
        };
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    private sanitizeLogData(args: any[]): any[] {
        return args.map(arg => {
            if (typeof arg === 'string') {
                return this.sanitizeString(arg);
            }

            if (typeof arg === 'object' && arg !== null) {
                return this.sanitizeObject(arg);
            }

            return arg;
        });
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç—Ä–æ–∫
     */
    private sanitizeString(str: string): string {
        return str
            .replace(/Bearer\s+[A-Za-z0-9\-_.]+/g, 'Bearer [HIDDEN]')
            .replace(/token[^:]*:\s*[^,\s}]+/gi, 'token: [HIDDEN]')
            .replace(/jwt[^:]*:\s*[^,\s}]+/gi, 'jwt: [HIDDEN]')
            .replace(/password[^:]*:\s*[^,\s}]+/gi, 'password: [HIDDEN]')
            .replace(/telegramId[^:]*:\s*\d+/gi, 'telegramId: [HIDDEN]');
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    private sanitizeObject(obj: any): SanitizedObject {
        const sensitiveKeys = ['token', 'jwt', 'password', 'telegramId', 'initData', 'hash'];

        try {
            const sanitized: SanitizedObject = { ...obj };

            for (const key of Object.keys(sanitized)) {
                if (sensitiveKeys.some(sensitive => key.toLowerCase().includes(sensitive))) {
                    sanitized[key] = '[HIDDEN]';
                }
            }

            return sanitized;
        } catch (error) {
            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –≤–µ—Ä—Å–∏—é
            return { message: '[OBJECT_SANITIZATION_ERROR]' };
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    private getLevelName(): LogLevel {
        const levelNames: LogLevel[] = ['ERROR', 'WARN', 'INFO', 'DEBUG'];
        return levelNames[this.currentLevel] || 'ERROR';
    }

    // =============== –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ===============

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ (–≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è)
     */
    public error(...args: any[]): void {
        if (this.currentLevel >= this.levels.ERROR) {
            const filteredArgs = this.sanitizeLogData(args);
            if (this.originalConsole?.error) {
                this.originalConsole.error('üî¥ [ERROR]', ...filteredArgs);
            } else {
                console.error('üî¥ [ERROR]', ...filteredArgs);
            }
        }
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
     */
    public warn(...args: any[]): void {
        if (this.currentLevel >= this.levels.WARN) {
            const filteredArgs = this.sanitizeLogData(args);
            if (this.originalConsole?.warn) {
                this.originalConsole.warn('üü° [WARN]', ...filteredArgs);
            } else {
                console.warn('üü° [WARN]', ...filteredArgs);
            }
        }
    }

    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    public info(...args: any[]): void {
        if (this.currentLevel >= this.levels.INFO) {
            const filteredArgs = this.sanitizeLogData(args);
            if (this.originalConsole?.info) {
                this.originalConsole.info('üîµ [INFO]', ...filteredArgs);
            } else {
                console.info('üîµ [INFO]', ...filteredArgs);
            }
        }
    }

    /**
     * Debug –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ development)
     */
    public debug(...args: any[]): void {
        if (this.currentLevel >= this.levels.DEBUG) {
            const filteredArgs = this.sanitizeLogData(args);
            if (this.originalConsole?.log) {
                this.originalConsole.log('‚ö™ [DEBUG]', ...filteredArgs);
            } else {
                console.log('‚ö™ [DEBUG]', ...filteredArgs);
            }
        }
    }

    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —É—Ä–æ–≤–Ω–∏, –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫)
     */
    public force(...args: any[]): void {
        const filteredArgs = this.sanitizeLogData(args);
        if (this.originalConsole?.error) {
            this.originalConsole.error('üî• [FORCE]', ...filteredArgs);
        } else {
            console.error('üî• [FORCE]', ...filteredArgs);
        }
    }

    // =============== –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===============

    /**
     * –í–∫–ª—é—á–µ–Ω–∏–µ debug —Ä–µ–∂–∏–º–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
     */
    public enableDebug(): void {
        this.currentLevel = this.levels.DEBUG;
        this.info('Debug —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω');
    }

    /**
     * –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (–¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
     */
    public disable(): void {
        this.currentLevel = -1;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
     */
    public getEnvironment(): Environment {
        return this.environment;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    public getCurrentLevel(): number {
        return this.currentLevel;
    }

    /**
     * –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    public setLevel(level: LogLevel): void {
        if (level in this.levels) {
            this.currentLevel = this.levels[level];
            this.info(`–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${level}`);
        } else {
            this.warn(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: ${level}`);
        }
    }
}

// =============== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –≠–ö–°–ü–û–†–¢ ===============

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
const Logger = new LoggerClass();

// –î–æ–±–∞–≤–ª—è–µ–º –≤ window –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
if (typeof window !== 'undefined') {
    (window as any).Logger = Logger;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è ES –º–æ–¥—É–ª–µ–π
export default Logger;

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è CommonJS —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
if (typeof module !== 'undefined' && module.exports) {
    module.exports = Logger;
} 