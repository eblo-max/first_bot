/**
 * üéÆ –û–°–ù–û–í–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï "–ö–†–ò–ú–ò–ù–ê–õ–¨–ù–´–ô –ë–õ–ï–§"
 * –ú–æ–¥—É–ª—å–Ω–∞—è TypeScript –≤–µ—Ä—Å–∏—è
 */

import { AppGameData, selectAnswer, calculatePoints, setTelegramApp } from './game-core.js';
import { authorize, verifyExistingToken, initAppWithAuth } from './auth.js';
import {
    GameStory,
    TelegramWebAppData,
    AppTheme,
    GameFinishResult,
    GameResult
} from './types.js';

// =============== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===============

let telegramApp: TelegramWebAppData | null = null;

// =============== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===============

function shuffleArray<T>(array: T[]): T[] {
    const shuffled = [...array];
    for (let i = shuffled.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    return shuffled;
}

function updateGameInterface(): void {
    const gameInterface = (window as any).GameInterface;
    if (gameInterface && typeof gameInterface.updateUI === 'function') {
        gameInterface.updateUI(AppGameData);
        console.log('üîÑ –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
}

// =============== –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï ===============

function loadTestGameData(): void {
    console.log('üß™ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã...');

    const testStories: GameStory[] = [
        {
            id: 'test-story-1',
            title: '–û–ì–†–ê–ë–õ–ï–ù–ò–ï –Æ–í–ï–õ–ò–†–ù–û–ì–û –ú–ê–ì–ê–ó–ò–ù–ê',
            content: '–ü—Ä–µ—Å—Ç—É–ø–Ω–∏–∫ –≤–∑–ª–æ–º–∞–ª –∑–∞–¥–Ω—é—é –¥–≤–µ—Ä—å —é–≤–µ–ª–∏—Ä–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ 3 —á–∞—Å–∞ –Ω–æ—á–∏. –û–Ω –æ—Ç–∫–ª—é—á–∏–ª –∫–∞–º–µ—Ä—ã –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è, –Ω–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª <span class="highlighted-text">—Å–∫—Ä—ã—Ç—É—é –∫–∞–º–µ—Ä—É –Ω–∞–¥ —Å–µ–π—Ñ–æ–º</span>. –ù–∞ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–Ω–æ, –∫–∞–∫ –æ–Ω <span class="highlighted-text">–±–µ–∑ –ø–µ—Ä—á–∞—Ç–æ–∫</span> –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∏—Ç—Ä–∏–Ω—ã –∏ —Å–æ–±–∏—Ä–∞–µ—Ç —É–∫—Ä–∞—à–µ–Ω–∏—è –≤ —Ä—é–∫–∑–∞–∫. –ü–µ—Ä–µ–¥ —É—Ö–æ–¥–æ–º –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è <span class="highlighted-text">—Ä–∞–∫–æ–≤–∏–Ω–æ–π –≤ –ø–æ–¥—Å–æ–±–∫–µ</span>, —á—Ç–æ–±—ã —Å–º—ã—Ç—å –∫—Ä–æ–≤—å —Å –ø–æ—Ä–µ–∑–∞ –Ω–∞ —Ä—É–∫–µ.',
            date: '12.04.2024',
            difficulty: 'medium',
            mistakes: [
                {
                    id: 'mistake-1',
                    text: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∏–ª —Å–∏—Å—Ç–µ–º—É –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è, –Ω–µ –∑–∞–º–µ—Ç–∏–≤ —Å–∫—Ä—ã—Ç—É—é –∫–∞–º–µ—Ä—É',
                    isCorrect: false,
                    explanation: '–•–æ—Ç—è –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫ –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É —Å –∫–∞–º–µ—Ä–æ–π, —ç—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —É–ª–∏–∫–æ–π.'
                },
                {
                    id: 'mistake-2',
                    text: '–†–∞–±–æ—Ç–∞–ª –±–µ–∑ –ø–µ—Ä—á–∞—Ç–æ–∫, –æ—Å—Ç–∞–≤–∏–≤ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ –ø–∞–ª—å—Ü–µ–≤ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–∞—Ö –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è—Ö',
                    isCorrect: false,
                    explanation: '–û—Ç–ø–µ—á–∞—Ç–∫–∏ –ø–∞–ª—å—Ü–µ–≤ - —Å–µ—Ä—å–µ–∑–Ω–∞—è —É–ª–∏–∫–∞, –Ω–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –∏—Ö —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è.'
                },
                {
                    id: 'mistake-3',
                    text: '–û—Å—Ç–∞–≤–∏–ª —Å–≤–æ–∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–ª–µ–¥—ã, —Å–º—ã–≤ –∫—Ä–æ–≤—å –≤ —Ä–∞–∫–æ–≤–∏–Ω–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏–ª–æ –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –î–ù–ö',
                    isCorrect: true,
                    explanation: '–ü—Ä–µ—Å—Ç—É–ø–Ω–∏–∫ –æ—Å—Ç–∞–≤–∏–ª –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª (–∫—Ä–æ–≤—å), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ —Å–ª–∏–≤ —Ä–∞–∫–æ–≤–∏–Ω—ã. –î–∞–∂–µ –ø–æ—Å–ª–µ —Å–º—ã–≤–∞–Ω–∏—è, —Å–ª–µ–¥—ã –î–ù–ö –æ—Å—Ç–∞—é—Ç—Å—è.'
                }
            ]
        },
        {
            id: 'test-story-2',
            title: '–ö–†–ê–ñ–ê –í –ú–£–ó–ï–ï –ò–°–ö–£–°–°–¢–í',
            content: '–í–æ –≤—Ä–µ–º—è –≤—ã—Å—Ç–∞–≤–∫–∏ –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏—Å—Ç–æ–≤ –≤ –≥–æ—Ä–æ–¥—Å–∫–æ–º –º—É–∑–µ–µ –±—ã–ª–∞ —É–∫—Ä–∞–¥–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∞ –ö–ª–æ–¥–∞ –ú–æ–Ω–µ.',
            date: '23.05.2024',
            difficulty: 'hard',
            mistakes: [
                {
                    id: 'mistake-1',
                    text: '–ü—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ –≤ —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã - —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π',
                    isCorrect: false,
                    explanation: '–í —Ç–æ–ª–ø–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º.'
                },
                {
                    id: 'mistake-2',
                    text: '–ü—Ä–æ–¥–∞–∂–∞ —É–∫—Ä–∞–¥–µ–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∞—É–∫—Ü–∏–æ–Ω',
                    isCorrect: true,
                    explanation: '–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–¥–∞—Ç—å —É–∫—Ä–∞–¥–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∞—É–∫—Ü–∏–æ–Ω - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞.'
                },
                {
                    id: 'mistake-3',
                    text: '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –∂—É—Ä–Ω–∞–ª–µ',
                    isCorrect: false,
                    explanation: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ—Ä—ã —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–∏—Ç–∏—Ä—É—é—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–±–æ–π.'
                }
            ]
        },
        {
            id: 'test-story-3',
            title: '–ú–û–®–ï–ù–ù–ò–ß–ï–°–¢–í–û –°–û –°–¢–†–ê–•–û–í–ö–û–ô',
            content: '–ë–∏–∑–Ω–µ—Å–º–µ–Ω –∑–∞—è–≤–∏–ª –æ –∫—Ä–∞–∂–µ –¥–æ—Ä–æ–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –ø–æ–¥–∞–ª –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤—É—é –≤—ã–ø–ª–∞—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ 180 000 –µ–≤—Ä–æ. –ü–æ –µ–≥–æ —Å–ª–æ–≤–∞–º, –∞–≤—Ç–æ–º–æ–±–∏–ª—å –±—ã–ª —É–∫—Ä–∞–¥–µ–Ω —Å –ø–æ–¥–∑–µ–º–Ω–æ–π –ø–∞—Ä–∫–æ–≤–∫–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞. –ü–æ–ª–∏—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∞, —á—Ç–æ –≤–ª–∞–¥–µ–ª–µ—Ü <span class="highlighted-text">–Ω–µ–¥–∞–≤–Ω–æ –∏–º–µ–ª —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏</span> –∏ <span class="highlighted-text">—Å–Ω—è–ª —Å –º–∞—à–∏–Ω—ã –¥–æ—Ä–æ–≥–∏–µ –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–µ–¥ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π –∫—Ä–∞–∂–µ–π</span>. –¢–∞–∫–∂–µ –≤—ã—è—Å–Ω–∏–ª–æ—Å—å, —á—Ç–æ –æ–Ω <span class="highlighted-text">—Å–º–µ–Ω–∏–ª —Å—Ç—Ä–∞—Ö–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é –∑–∞ –º–µ—Å—è—Ü –¥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞</span>, —É–≤–µ–ª–∏—á–∏–≤ —Å—Ç—Ä–∞—Ö–æ–≤—É—é —Å—É–º–º—É.',
            date: '07.02.2024',
            difficulty: 'easy',
            mistakes: [
                {
                    id: 'mistake-1',
                    text: '–°–º–µ–Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å—É–º–º—ã –Ω–µ–∑–∞–¥–æ–ª–≥–æ –¥–æ "–∫—Ä–∞–∂–∏"',
                    isCorrect: true,
                    explanation: '–°–º–µ–Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å—É–º–º—ã –Ω–µ–∑–∞–¥–æ–ª–≥–æ –¥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–∑–Ω–∞–∫ —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞. –°—Ç—Ä–∞—Ö–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–º–µ—á–∞—é—Ç —Ç–∞–∫–∏–µ —Å–ª—É—á–∞–∏ –∫–∞–∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –ø—Ä–æ–≤–æ–¥—è—Ç –æ—Å–æ–±–µ–Ω–Ω–æ —Ç—â–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ.'
                },
                {
                    id: 'mistake-2',
                    text: '–°–Ω—è—Ç–∏–µ –¥–æ—Ä–æ–≥–∏—Ö –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–µ–¥ –∏–Ω—Å—Ü–µ–Ω–∏—Ä–æ–≤–∫–æ–π –∫—Ä–∞–∂–∏',
                    isCorrect: false,
                    explanation: '–•–æ—Ç—è —ç—Ç–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ, –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –¥–µ—Ç–∞–ª–∏ –±—ã–ª–∏ —Å–Ω—è—Ç—ã –∏–º–µ–Ω–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º, –∞ –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ –≤–æ—Ä–∞–º–∏ –ø–æ—Å–ª–µ –∫—Ä–∞–∂–∏, –¥–æ–≤–æ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–æ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤.'
                },
                {
                    id: 'mistake-3',
                    text: '–ù–∞–ª–∏—á–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π –∫–∞–∫ –º–æ—Ç–∏–≤ –¥–ª—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞',
                    isCorrect: false,
                    explanation: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞—é—Ç –º–æ—Ç–∏–≤, –Ω–æ —Å–∞–º–∏ –ø–æ —Å–µ–±–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞. –ú–Ω–æ–≥–∏–µ –ª—é–¥–∏ —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∂–µ—Ä—Ç–≤–∞–º–∏ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π.'
                }
            ]
        },
        {
            id: 'test-story-4',
            title: '–ò–°–ß–ï–ó–ù–û–í–ï–ù–ò–ï –í –ì–û–†–ê–•',
            content: '–û–ø—ã—Ç–Ω—ã–π –∞–ª—å–ø–∏–Ω–∏—Å—Ç –±—ã–ª –æ–±—ä—è–≤–ª–µ–Ω –ø—Ä–æ–ø–∞–≤—à–∏–º –±–µ–∑ –≤–µ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏—è. –°–ø–∞—Å–∞—Ç–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞—Å—å –¥–≤–µ –Ω–µ–¥–µ–ª–∏, –Ω–æ —Ç–µ–ª–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏. –ß–µ—Ä–µ–∑ —Ç—Ä–∏ –º–µ—Å—è—Ü–∞ –æ–Ω –±—ã–ª <span class="highlighted-text">–∑–∞–º–µ—á–µ–Ω –∂–∏–≤—ã–º –≤ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–µ</span> —Å –Ω–æ–≤—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏. –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤—ã—è–≤–∏–ª–æ, —á—Ç–æ –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º –æ–Ω <span class="highlighted-text">–æ—Ñ–æ—Ä–º–∏–ª —Å—Ç—Ä–∞—Ö–æ–≤–∫—É –∂–∏–∑–Ω–∏ –Ω–∞ 2 –º–∏–ª–ª–∏–æ–Ω–∞ –¥–æ–ª–ª–∞—Ä–æ–≤</span> –≤ –ø–æ–ª—å–∑—É –∂–µ–Ω—ã, –∞ —Ç–∞–∫–∂–µ <span class="highlighted-text">–∏–º–µ–ª –∫—Ä—É–ø–Ω—ã–µ –¥–æ–ª–≥–∏</span> –ø–µ—Ä–µ–¥ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏.',
            date: '14.11.2023',
            difficulty: 'medium',
            mistakes: [
                {
                    id: 'mistake-1',
                    text: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫—Ä—É–ø–Ω–æ–π —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –∂–∏–∑–Ω–∏ –Ω–µ–∑–∞–¥–æ–ª–≥–æ –¥–æ –∏–Ω—Å—Ü–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å–º–µ—Ä—Ç–∏',
                    isCorrect: true,
                    explanation: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫—Ä—É–ø–Ω–æ–π —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –∂–∏–∑–Ω–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ "–Ω–µ—Å—á–∞—Å—Ç–Ω—ã–º —Å–ª—É—á–∞–µ–º" - —è–≤–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞. –°—Ç—Ä–∞—Ö–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è—é—Ç, –∫–∞–∫ –¥–∞–≤–Ω–æ –±—ã–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω –ø–æ–ª–∏—Å –≤ —Å–ª—É—á–∞—è—Ö —Å –∫—Ä—É–ø–Ω—ã–º–∏ –≤—ã–ø–ª–∞—Ç–∞–º–∏.'
                },
                {
                    id: 'mistake-2',
                    text: '–ù–∞–ª–∏—á–∏–µ –∫—Ä—É–ø–Ω—ã—Ö –¥–æ–ª–≥–æ–≤ –∫–∞–∫ –º–æ—Ç–∏–≤ –¥–ª—è –∏–Ω—Å—Ü–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å–º–µ—Ä—Ç–∏',
                    isCorrect: false,
                    explanation: '–î–æ–ª–≥–∏ —Å–æ–∑–¥–∞—é—Ç –º–æ—Ç–∏–≤, –Ω–æ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –æ—à–∏–±–∫–æ–π –≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞. –ö —Ç–æ–º—É –∂–µ, –Ω–∞—Å—Ç–æ—è—â–∏–µ –Ω–µ—Å—á–∞—Å—Ç–Ω—ã–µ —Å–ª—É—á–∞–∏ —Ç–∞–∫–∂–µ —Å–ª—É—á–∞—é—Ç—Å—è —Å –ª—é–¥—å–º–∏, –∏–º–µ—é—â–∏–º–∏ –¥–æ–ª–≥–∏.'
                },
                {
                    id: 'mistake-3',
                    text: '–ü–æ—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—É–±–ª–∏–∫–µ –ø–æ–¥ –Ω–æ–≤—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –ø–æ—Å–ª–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è',
                    isCorrect: false,
                    explanation: '–•–æ—Ç—è –ø–æ—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—É–±–ª–∏–∫–µ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ, –º–Ω–æ–≥–∏–µ –ª—é–¥–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏–Ω–∞—é—Ç –Ω–æ–≤—É—é –∂–∏–∑–Ω—å –ø–æ–¥ –Ω–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö —Å –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.'
                }
            ]
        },
        {
            id: 'test-story-5',
            title: '–û–¢–†–ê–í–õ–ï–ù–ò–ï –ë–ò–ó–ù–ï–°–ú–ï–ù–ê',
            content: '–ò–∑–≤–µ—Å—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å–º–µ–Ω –±—ã–ª –Ω–∞–π–¥–µ–Ω –º–µ—Ä—Ç–≤—ã–º –≤ —Å–≤–æ–µ–º –¥–æ–º–µ. –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä–∏—á–∏–Ω–æ–π —Å–º–µ—Ä—Ç–∏ —Å—á–∏—Ç–∞–ª—Å—è —Å–µ—Ä–¥–µ—á–Ω—ã–π –ø—Ä–∏—Å—Ç—É–ø, –Ω–æ —Ç–æ–∫—Å–∏–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –≤—ã—è–≤–∏–ª–∞ <span class="highlighted-text">—Ä–µ–¥–∫–∏–π —è–¥ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è</span>. –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–∞–ª–∞ –µ–≥–æ –≤—Ç–æ—Ä–∞—è –∂–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è <span class="highlighted-text">–Ω–∞—Å—Ç–∞–∏–≤–∞–ª–∞ –Ω–∞ –∫—Ä–µ–º–∞—Ü–∏–∏</span> –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Å–∫—Ä—ã—Ç–∏—è –∏ —è–≤–ª—è–ª–∞—Å—å <span class="highlighted-text">–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–∞—Å–ª–µ–¥–Ω–∏—Ü–µ–π</span> –ø–æ –Ω–µ–¥–∞–≤–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–º—É –∑–∞–≤–µ—â–∞–Ω–∏—é. –í –µ–µ –ø–æ–∏—Å–∫–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—à–ª–∏ –∑–∞–ø—Ä–æ—Å—ã –æ –º–µ—Ç–æ–¥–∞—Ö –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è.',
            date: '30.03.2024',
            difficulty: 'hard',
            mistakes: [
                {
                    id: 'mistake-1',
                    text: '–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç—Ä–∞–≤–ª—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤–∞—Ö –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤',
                    isCorrect: true,
                    explanation: '–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç—Ä–∞–≤–ª—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤–∞—Ö —Å –ª–∏—á–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –¶–∏—Ñ—Ä–æ–≤—ã–µ —Å–ª–µ–¥—ã –∫—Ä–∞–π–Ω–µ —Å–ª–æ–∂–Ω–æ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é, –∏ –ø—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã –∏–º–µ—é—Ç –∑–∞–∫–æ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.'
                },
                {
                    id: 'mistake-2',
                    text: '–ù–∞—Å—Ç–∞–∏–≤–∞–Ω–∏–µ –Ω–∞ –∫—Ä–µ–º–∞—Ü–∏–∏ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Å–∫—Ä—ã—Ç–∏—è, —á—Ç–æ –≤—ã–∑–≤–∞–ª–æ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—è',
                    isCorrect: false,
                    explanation: '–•–æ—Ç—è —ç—Ç–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ, –º–Ω–æ–≥–∏–µ –ª—é–¥–∏ –Ω–∞—Å—Ç–∞–∏–≤–∞—é—Ç –Ω–∞ –∫—Ä–µ–º–∞—Ü–∏–∏ –ø–æ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–º –∏–ª–∏ –ª–∏—á–Ω—ã–º —É–±–µ–∂–¥–µ–Ω–∏—è–º. –ö —Ç–æ–º—É –∂–µ, —Å–∞–º–æ –ø–æ —Å–µ–±–µ —ç—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –∏–ª–∏ –ø—Ä—è–º—ã–º –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º.'
                },
                {
                    id: 'mistake-3',
                    text: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∫–æ–≥–æ —è–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –ø—Ä–∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ–π —Ç–æ–∫—Å–∏–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ',
                    isCorrect: false,
                    explanation: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —è–¥–∞ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ, –Ω–æ –º–Ω–æ–≥–∏–µ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º–∏. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –±—ã–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–∑-–∑–∞ –¥—Ä—É–≥–∏—Ö –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤.'
                }
            ]
        }
    ];

    const shuffledStories = shuffleArray([...testStories]);
    AppGameData.stories = shuffledStories;
    AppGameData.currentStoryIndex = 0;
    AppGameData.currentStory = shuffledStories[0] || null;
    AppGameData.score = 0;
    AppGameData.gameId = 'test-game-' + Date.now();
    AppGameData.isTestMode = true;

    updateGameInterface();

    setTimeout(() => {
        startTimer();
    }, 100);
}

// =============== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ===============

function initApp(): void {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

    try {
        if (!(window as any).Telegram?.WebApp) {
            console.warn('‚ö†Ô∏è Telegram WebApp API –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º');
            handleNoTelegramApi();
            return;
        }

        telegramApp = (window as any).Telegram.WebApp;
        if (telegramApp) {
            setTelegramApp(telegramApp);
        }

        const theme = telegramApp?.colorScheme || 'dark';
        AppGameData.theme = theme;
        document.body.setAttribute('data-theme', theme);

        telegramApp?.expand();
        telegramApp?.BackButton.onClick(() => handleBackButton());

        loadGameData();
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        handleNoTelegramApi();
    }
}

function handleNoTelegramApi(): void {
    console.log('üß™ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º...');
    AppGameData.isTestMode = true;

    if (!(window as any).Telegram) {
        (window as any).Telegram = {
            WebApp: {
                ready: () => console.log('üì± WebApp.ready() –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ'),
                expand: () => console.log('üì± WebApp.expand() –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ'),
                initData: "test_mode_data",
                initDataUnsafe: { user: { id: 12345678, first_name: "Test", username: "testuser" } },
                BackButton: {
                    show: () => console.log('üîô BackButton.show()'),
                    hide: () => console.log('üîô BackButton.hide()'),
                    onClick: (callback: () => void) => {
                        document.addEventListener('keydown', (e) => {
                            if (e.key === 'Escape') callback();
                        });
                    }
                },
                colorScheme: "dark" as AppTheme,
                HapticFeedback: {
                    impactOccurred: (type?: string) => console.log(`üì≥ HapticFeedback.impactOccurred(${type})`),
                    notificationOccurred: (type?: string) => console.log(`üì≥ HapticFeedback.notificationOccurred(${type})`)
                }
            }
        };
    }

    telegramApp = (window as any).Telegram.WebApp;
    if (telegramApp) {
        setTelegramApp(telegramApp);
    }
    loadGameData(true);
}

function handleBackButton(): void {
    console.log('üîô –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"');
    const shouldExit = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∏–≥—Ä—É?');
    if (shouldExit) {
        window.location.href = '/';
    }
}

async function loadGameData(testMode: boolean = false): Promise<void> {
    console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã...', { testMode });

    try {
        if (testMode || AppGameData.isTestMode) {
            loadTestGameData();
            return;
        }
        // –í –±—É–¥—É—â–µ–º - –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        loadTestGameData();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        loadTestGameData();
    }
}

function startTimer(): void {
    console.log('‚è±Ô∏è –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞');

    if (AppGameData.timer !== null) {
        clearInterval(AppGameData.timer);
    }

    AppGameData.secondsLeft = AppGameData.timerDuration;
    AppGameData.startTime = new Date();
    AppGameData.isAnswering = false;
    AppGameData.answerSelected = false;

    const gameInterface = (window as any).GameInterface;
    if (gameInterface?.resetTimer) {
        gameInterface.resetTimer(AppGameData.timerDuration);
    }

    AppGameData.timer = window.setInterval(() => {
        AppGameData.secondsLeft--;

        if (gameInterface?.updateTimer) {
            gameInterface.updateTimer(AppGameData.secondsLeft, AppGameData.timerDuration);
        }

        if (AppGameData.secondsLeft <= 0) {
            timeExpired();
        }
    }, 1000);
}

function timeExpired(): void {
    console.log('‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!');

    if (AppGameData.timer !== null) {
        clearInterval(AppGameData.timer);
        AppGameData.timer = null;
    }

    if (AppGameData.answerSelected) return;

    AppGameData.isAnswering = true;

    const correctMistake = AppGameData.currentStory?.mistakes.find(m => m.isCorrect);

    const result: GameResult = {
        correct: false,
        explanation: "–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ! " + (correctMistake?.explanation || "–í–∞–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –≤–æ–≤—Ä–µ–º—è."),
        pointsEarned: 0,
        timeSpent: AppGameData.timerDuration
    };

    AppGameData.result = result;

    setTimeout(() => {
        const gameInterface = (window as any).GameInterface;
        if (gameInterface?.showResult) {
            gameInterface.showResult(result);
        }
        AppGameData.isAnswering = false;
    }, 1000);
}

function nextQuestion(): void {
    console.log(`‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É. –ò–Ω–¥–µ–∫—Å: ${AppGameData.currentStoryIndex}`);

    if (AppGameData.currentStoryIndex >= AppGameData.stories.length - 1) {
        finishGame();
        return;
    }

    if (AppGameData.timer !== null) {
        clearInterval(AppGameData.timer);
        AppGameData.timer = null;
    }

    AppGameData.currentStoryIndex++;
    AppGameData.currentStory = AppGameData.stories[AppGameData.currentStoryIndex];
    AppGameData.isAnswering = false;
    AppGameData.answerSelected = false;
    AppGameData.result = null;

    updateGameInterface();

    setTimeout(() => {
        startTimer();
    }, 100);
}

async function finishGame(): Promise<void> {
    console.log('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã...');

    let correctAnswers = 0;
    const totalQuestions = AppGameData.stories.length;

    AppGameData.stories.forEach((story) => {
        if ((story as any).correct === true) correctAnswers++;
    });

    const accuracy = Math.round((correctAnswers / totalQuestions) * 100);
    const totalScore = AppGameData.score || 0;

    const gameResult: GameFinishResult = {
        gameId: AppGameData.gameId || 'unknown',
        totalScore: totalScore,
        correctAnswers: correctAnswers,
        totalQuestions: totalQuestions,
        accuracy: accuracy,
        timeSpent: 0,
        experienceGained: Math.round(totalScore * 0.1),
        leveledUp: false,
        achievementsUnlocked: [],
        reputationChange: correctAnswers * 10,
        rank: accuracy >= 80 ? 'Detective' : accuracy >= 60 ? 'Inspector' : 'Rookie'
    };

    AppGameData.gameResult = gameResult;
    showGameFinishDialog(gameResult);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const token = localStorage.getItem('auth_token') || localStorage.getItem('token');

        if (token) {
            console.log('üîê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...');

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const response = await fetch('/api/game/finish', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({
                    gameId: AppGameData.gameId,
                    totalScore: totalScore,
                    correctAnswers: correctAnswers,
                    totalQuestions: totalQuestions
                })
            });

            if (response.ok) {
                const data = await response.json();
                console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');

                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                if (data.status === 'success' && data.data.newAchievements && data.data.newAchievements.length > 0) {
                    console.log('üèÜ –ü–æ–ª—É—á–µ–Ω—ã –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:', data.data.newAchievements);

                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    if ((window as any).AchievementSystem) {
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                        if (data.data.user && data.data.user.stats) {
                            (window as any).AchievementSystem.updateUserStats({
                                investigations: data.data.user.stats.totalGames || 0,
                                accuracy: data.data.user.stats.accuracy || 0,
                                totalScore: data.data.user.stats.totalScore || 0,
                                winStreak: data.data.user.stats.maxStreak || 0,
                                perfectGames: data.data.user.stats.perfectGames || 0,
                                fastestGame: data.data.user.stats.fastestGame || 999
                            });
                        }

                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
                        (window as any).AchievementSystem.handleNewAchievements(data.data.newAchievements);
                    } else {
                        console.log('‚ö†Ô∏è AchievementSystem –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                        // Fallback: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        data.data.newAchievements.forEach((achievement: any) => {
                            if ((window as any).Telegram?.WebApp?.showAlert) {
                                (window as any).Telegram.WebApp.showAlert(`üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: ${achievement.name}`);
                            } else {
                                console.log(`üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: ${achievement.name}`);
                            }
                        });
                    }
                }
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', await response.text());
            }
        } else {
            console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', error);
    }
}

function showGameFinishDialog(gameResult: GameFinishResult): void {
    const existingDialog = document.querySelector('.game-finish-dialog');
    if (existingDialog) existingDialog.remove();

    const dialog = document.createElement('div');
    dialog.className = 'game-finish-dialog';
    dialog.innerHTML = `
        <div class="game-finish-content">
            <h2>üîç –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!</h2>
            <div class="stats-summary">
                <p>–í–∞—à —Å—á–µ—Ç: <span class="highlight-score">${gameResult.totalScore}</span> –æ—á–∫–æ–≤</p>
                <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: <strong>${gameResult.correctAnswers}</strong> –∏–∑ <strong>${gameResult.totalQuestions}</strong></p>
                <p>–¢–æ—á–Ω–æ—Å—Ç—å: <span class="accuracy">${gameResult.accuracy}%</span></p>
                <p>–ó–≤–∞–Ω–∏–µ: <span class="rank">${gameResult.rank}</span></p>
            </div>
            <div class="game-finish-buttons">
                <button id="btnGoHome" class="finish-button">üè† –ì–õ–ê–í–ù–ê–Ø</button>
                <button id="btnGoProfile" class="finish-button primary">üë§ –ü–†–û–§–ò–õ–¨</button>
            </div>
        </div>
    `;

    document.body.appendChild(dialog);

    document.getElementById('btnGoHome')?.addEventListener('click', () => {
        window.location.href = '/';
    });

    document.getElementById('btnGoProfile')?.addEventListener('click', () => {
        window.location.href = '/profile.html';
    });

    // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!document.getElementById('finish-dialog-styles')) {
        const style = document.createElement('style');
        style.id = 'finish-dialog-styles';
        style.textContent = `
            .game-finish-dialog {
                position: fixed; top: 0; left: 0; width: 100%; height: 100%;
                background: rgba(0, 0, 0, 0.8); display: flex; align-items: center;
                justify-content: center; z-index: 1000;
            }
            .game-finish-content {
                background: #2C2C2C; border: 2px solid #8B0000;
                border-radius: 12px; padding: 24px; text-align: center;
                width: 90%; max-width: 400px;
            }
            .finish-button {
                flex: 1; padding: 14px 20px; border: 1px solid #5C1010;
                background: #1E1E1E; color: #E8E8E8; border-radius: 8px;
                font-weight: bold; cursor: pointer; margin: 5px;
            }
            .finish-button.primary {
                background: #8B0000; border-color: #8B0000;
            }
        `;
        document.head.appendChild(style);
    }
}

function clearAppCache(): void {
    console.log('üßπ –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    localStorage.clear();
    sessionStorage.clear();
    location.reload();
}

function provideFeedback(type: 'correct' | 'incorrect' | 'tap'): void {
    try {
        if (!telegramApp?.HapticFeedback) return;

        switch (type) {
            case 'correct':
                telegramApp.HapticFeedback.notificationOccurred('success');
                break;
            case 'incorrect':
                telegramApp.HapticFeedback.notificationOccurred('error');
                break;
            case 'tap':
                telegramApp.HapticFeedback.impactOccurred('light');
                break;
        }
    } catch (error) {
        console.log(`üéÆ Feedback: ${type}`);
    }
}

// =============== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –≠–ö–°–ü–û–†–¢ ===============

if (typeof window !== 'undefined') {
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω Telegram WebApp
            const tg = (window as any).Telegram?.WebApp;
            if (tg && tg.initData && !tg.initData.includes('test_mode_data')) {
                initAppWithAuth(initApp, tg);
            } else {
                initApp();
            }
        });
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω Telegram WebApp
        const tg = (window as any).Telegram?.WebApp;
        if (tg && tg.initData && !tg.initData.includes('test_mode_data')) {
            initAppWithAuth(initApp, tg);
        } else {
            initApp();
        }
    }

    // –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ window
    (window as any).selectAnswer = selectAnswer;
    (window as any).nextQuestion = nextQuestion;
    (window as any).startTimer = startTimer;
    (window as any).finishGame = finishGame;
    (window as any).clearAppCache = clearAppCache;
    (window as any).provideFeedback = provideFeedback;
    (window as any).authorize = authorize;
    (window as any).verifyExistingToken = verifyExistingToken;
    (window as any).initAppWithAuth = initAppWithAuth;

    // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    (window as any).CriminalBluffApp = (window as any).CriminalBluffApp || {};
    (window as any).CriminalBluffApp.clearCache = clearAppCache;
    (window as any).CriminalBluffApp.authorize = authorize;
    (window as any).CriminalBluffApp.provideFeedback = provideFeedback;

    console.log('‚úÖ –ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –ë–ª–µ—Ñ TypeScript –∑–∞–≥—Ä—É–∂–µ–Ω (–º–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)!');
} 